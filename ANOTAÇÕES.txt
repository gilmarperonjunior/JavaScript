==================================
AULA01/02:

*No JavaScript sempre que você ver o sinal de =, indicará que RECEBE algo.
    Exemplo1: Vaga a1 = carro1 
    Exemplo1: Quer dizer que a vaga a1 RECEBE o carro1

Exemplo2: a1 = carro2 
    Exemplo2: Para a vaga a1 RECEBER o carro2 é necessário o carro1 sair

Exemplo3: a1=null
    Exemplo3:Quer dizer que a vaga a1 não receberá carro nenhum (nula)

*No JavaScript moderno, além de utilizar a palavra "var", também podemos usar a palavra "let"
*No JavaScript podem existir variáveis pequenas
    Exemplo1: varn1 = 5
            varn2 = 8.5
            varn3 = 15

*Assim como podem também existir variáveis grandes
    Exemplos2: vars1 = JavaScript
            vars2 = Curso em Vídeo
            vars3 = Guanabra

*No JavaScript pode usar 3 tipos de aspas (é obrigatório ter as aspas após o =):
''
""
´´

*No JavaScript os nomes nas variáveis possuem um nome: IDENTIFICADORES, possuem algumas regras para escolher o nome:

    *Podem começar com letras, $ ou _
    *Não podem começar com números
    *É possível usar letras ou números
    *É possível usar acentos e símbolos
    *Não Podem conter espaços
    *Não podem ser palavras reservadas (repetidas)

*Dicas para Escolher um nome no indicador (var)
    *Letras Maiúsculas e Minúsculas fazem diferença
    *Tente usar nomes coerentes para as variáveis
    *Evite se tornar programador alfabeto e o contador kkkkkkk

*Tipos Primitivos primordiais são:

    *STRING
    Exemplos: Mistura de caracteres (números e letras) com pontos/virgulas/traço

    *NUMBER 
    Exemplos: Números 

    *BOOLEAN
    Exemplos: Valores Boleanos (True/False)

*Também existem: Null,Unidefined, Object (array), function.

*O comando typeof serve pra ajudar a descobrir o tipo primitivo de um tipo.
==================================
AULA 03:
    * O sinal de + pode servir para:
    *conectar um prompt/alert e etc com um var
    *Adição
    *Concatenação ( relaciona ideias/coisas)

Exemplos:
    *Caso eu queira Somar duas variáveis devo definir se é uma SOMA. Caso contrário o JavaSript definirá como Concatenação.
    *Para ser SOMA devo deixar um number + number
    *Se for uma CONCATENAÇÃO devo deixar uma string + string

*Métodos para converter de STRING para NUMBER
    *Number.parselnt(n) = Para Números Inteiros
    *Number.parseFloat(n) = Para números Reais (números com virgulas/quebrados)
    *Number() = Serve para casos específicos (ele irá se virar e ver se é num. Inteiro ou Quebrado)

*Método para converter de NUMBER para STRING
    *String(n) = é como o Number(n)
    *n.toString() = O que eu quero converter + toString()
    *

*Formatando String
    var s = 'JavaScript'
    Exemplos:
    'Eu estou aprendendo s' = Não faz uso interpolação ( relação)
    'eu estou aprendendo' + s = Faz uso Concatenação
    `Eu estou aprendendo ${s}` = Faz uso Template String 
    
*Usando Template String 
    Exemplo: `O aluno ${nome} de ${idade} anos tirou ${nota} na prova.
    Resultado: O aluno Gilmar de 18 anos tirou 6.5 na prova.

*Algusn outros exemplos de formatações/atributos de STRING:
    *s(nome da var).length = Quantos Caracters a string tem.
    *s.toUpperCase() = Joga a STRING para letras Maiúsculas
    s.toLowerCser() = Joga a STRING para a letras Minúsculas

*Formatando Number
    var n1 = 1543.5
    Exemplos: 
    n1.toFixed()= irá pular mais uma casa decimal (1543.50/ 154.350)
    .replace('' , '') = irá trocar elementos por outros (n1.toFixed(2).replace ('.' , ','))
    Resultado: 1543,50
    n1.toLocaleStrig('pt-BR', {style: 'currency', currency: 'BRL'})
DICAS:
    *PROMPT SEMPRE IRÁ DEVOLVER UM VALOR STRING
==================================
AULA 04/05
*Principais tipos de Operadores
    *Artiméticos  
    + Adição
    - Subtraçao
    * Multiplicação
    / (divisão para resultados/divisões quebrados) 5/2 = 2,5
    % (resto da divisão ineteira sobrando ) 5%2 = 1 (resto que sobrou)
    ** Potência 5 elevado a 2 = 25
   
*Cuidado com o uso de operadores, pq existe precedente de operadores
    Exemplos: 5+3/2 = primeiro virá o 3/2 = 1,5 dps somo com 5 = 6,5
    
    Exemplo: 5+3/2 = Caso eu queira que primeiro faça a soma de 5+3 deve-se usar ()
    Resultado: (5+3)/2 = 4

*Ordem de Precedêncais dos operadores:

    () primeiro sempre será analisado parenteses
    ** Depois será as potências
    * / % Os 3 tem mesmo valor não importando a Ordem
    + - e por fim esses.

* Para guardar os valores devo usar Operadores de Atribuições Simples (*Atribuição).

    Exemplos: var a, b, c, d, e, f. (Não é obrigatório ser alfabeto, de preferência contextualize).

    Exemplos: 
    var a = 5 + 3  8
    var b = a % 5  3
    var c = 5 * b ** 2 45
    var d = 10 - a / 2  6
    var e =  6 * 2 / d 2
    var f =  b % e + 4 / e 3

*Auto-Atribuições
    Exemplos: var n = 3
    n = n + 4  7
    o valor "n" que antes valia 3 irá passar a valer 7, isso é chamado auto-atribuições
    Mais exemplos: n = n - 5  2, agora n não valerá mais 7 e sim 2.

*Vale resultar que caso a auto-atribuição seje sobre ele mesmo, podemos resumir esse n = n + 4
    Exemplo: n = n + 4 ======> n+= 4 (Só irá valer caso o valor seje dele mesmo não irá valer os valores da seguinte forma:)
    n = x + 4 =======> dessa forma não é possível fazer o resumo.

*Valores de Incremento
    Exemplo: var x = 5
    x = x + 1 = 6
    x = x - 1 = 5
    x += 1 = 6
    x -+ = 1 = 5
    x++ Aqui podemos ver como seria usado o incremento
    x-- Aqui podemos ver como seria usado o incremento
     
*Os Atributos de Relacionais são eles:
   5 > 2  =====> true
   7 < 4  =====> false
   8 >= 8 =====> true
   9 <= 7 =====> false
   5 == 5 =====> true
   4 != 4 =====> false

*OBS: na programação = é o mesmo que "recebe" mas == é "igual", != quer dizer "diferente"
*OBS: var a = 8 var b = 15 a <= b - 10 (primeiro será feito a parte aritmética que no caso é b - 10 pra Depois
fazer a parte de relacionais a <=).

*Operadores de Relacionais de Identidade
    Exemplos:
    5 == 5 true
    5 == 5 '5' o JavaScript não irá identificar o String '' mas somente o número, então aqui seria true
    5 === '5' Já aqui trÊs sinais de igual vai verificar se são identicos em valor e tipo, nesse caso
    eles possuem o mesmo valor mas tipos diferentes ( number / string) então seria false
    5 === 5 true

*Os Operadores Lógicos são eles:
    ! negação ===> Eu quero uma caneta que 'NÃO' seja azul.
    && conjunção ===> Eu quero uma caneta AZUL 'E' VERMELHA.
    || disjunções  ===> Eu quero uma caneta Azul 'OU' vermelha.


* ! Tratado com operador Onário, depois da exclamação pode true/false ou uma expressão que dê um desses
    Exemplos: uma qcoisa que não seja true é false ( e vice-versa)

* && Tratado com Binário (dois valores lógicos)
    Exemplos: Seguindo o exemplos da caneta
    AZUL      VERMELHA
    true   &&   true ===> Consegui as duas cores = true
    true   &&   false ===> Consegui apenas uma cor = false
    false  &&   true ===> Consegui apenas uma cor = false
    false  &&   false ===> Não consegui de nenhuma cor = false

*Disjunção São tratadas como binários (dois valores lógicos nos lados), basta que apenas um deles seja verdadeiro (true)
    Exemplos: 
    true   || true ===> true
    true   || false ===> true
    false  || true ===> true
    false  || false  ===> false

var a = 5
var b = 8
*OBS: a > b && b % 2 == 0 
*Para Resolver esta conta, primeiro se resolve as artiméticas, depois relacionais e por fim os lógicos.
Resultado = false

*OBS: CASO NA MESMA CONTA TENHA ||, &&, ! 
A ORDEM SEMPRE SERÁ: NÃO, E, OU.
Exemplos: Idade >= 15 && idade <= 17 (idade está entre 15 e 17?)
Exemplos: Estado: 'RJ' || 'SP' (O estado é RJ ou SP?)
Exemplos: >1500 && sexo != 'M' (o salário é acima de 1500 e não homem?)

RESUMO DAS ORDEMS EM UMA CONTA: 
1° Artiméticos : (), **< /, +, - 
2° Relacionais : > < >= <= (quem aparece primeiro da ordem esquerda para direita)
3° Lógicos : !, &&< || ( aqui existe ordem: NÃO !, E &&, OU ||)

*Os TERNÁRIOS São eles:
  ? 
  :

  Exemplos:
  teste?true:false
  média >= 7.0? "Aprovado" : "Reprovado"
  a média é maior ou igual a 7? se for é Aprovado se não é reprovado.

  Exemplos:
  var x = 8
  var res = x % 2 == 0 ? 5: 9
  Resultado= 0 == 0? 5:9 Vai ser 5, pois, 0 é igual a zero (true) e se fr true é 5 se não seria 9.
  res
  5
==================================
AULA 06/07
*Entendendo o DOM
    *é uma ACRÔNOMO PARA Document Object Model, conjunto de objetos dentro do meu navegador
    que dará acesso aos componentes internos do WebSite (não funciona dentro do Node.js)

*Árvore DOM:
OBS: o que estiver acima é chamado de parent, e abaixo chield 
    EXEMPLO: body é parent de h1, p, p, div MAS ele é chield de html, assim como html é parent de body ele é chield de document.
    
    *A raiz da árvore é chamada de window
        
        *Dentro do window temos: 
        location : Dá a localizalção do meu site (URL por exemplo) 
        document : Documento Atual
            html: a parte HTML do meu site
                head
                    meta, title
                body
                    h1
                    p 
                    p 
                        strong
                    div
        history: Guarda da onde eu vim

*Selecionando ELENTOS da árvore DOM
    *Por Marca/TagName
    getElementsByTagName()
    para selecionar o primeiro p, usa-se após o parênteses [0], caso eu queira selecioonar o sergundo p, uso [1], e assim sucessivamente. SEMPRE COMEÇANDO DO 0
    var p1 = document.getElementsByTagName("p")[1]
        p1.style.color = 'Blue'
        document.write(p1.innerHTML) = Pega o texto com as formatações feitas.
        alert(p1.innerText) = Pega o Texto sem as formatações.
    
    *Por ID
        getElementsByid()
        var d = document.getElementById("msg")
        d.style.background = 'green'
        d.innerText = 'Estou aguardando...' ( no início a tag div tinha o texto CLIQUE EM MIM, mas troquei Para
        Estou aguradando usando o Innetext)
        window.document.getElementById("msg").innerText = 'Olá' (outro metodo, mas esse é muito grande)

    *Por Nome
        getElementsByName()

    *Por Classe
        getElementsByClassName()
        Sgue o mesmo exmplo de ID só que no lugar de ID é class

    *Por Seletor
        querySelector()
            var d = window.document.querySelector('div#msg')
        querySelectorAll()

*EVENTOS DOM
    *VAMPOS SUPOR QUE EU TENHA UMA DIV (INDEX02.HTML)

    Existe alguns eventos usando o mouse que são:

    *mouseenter = quando o mouse entrar/passar na div
    *mousemove = o mouse se mover pela div
    *mousedown = quando clicar e segurar
    *mouseup = quando eu soltar o botao de pressionar do mouse
    *click = igual mouseenter mas aqui é quando sair da div

*Funções: Conjuntos de códigos/linhas que vão ser executadas somente quando o evento ocorrer

Ver Index03.HTML
    